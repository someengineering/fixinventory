[project]
name = "fixinventorycore"
version = "4.3.0"
authors = [{name="Some Engineering Inc."}]
description = "Keeps all the things."
license = { text="Apache-2.0" }
urls = {"Homepage" = "https://inventory.fix.security"}
requires-python = ">=3.12"
classifiers = [
    # Current project status
    "Development Status :: 5 - Production/Stable",
    # Audience
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    # License information
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (Apache-2.0+)",
    # Supported python versions
    "Programming Language :: Python :: 3.12",
    # Supported OS's
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    # Extra metadata
    "Environment :: Console",
    "Natural Language :: English",
    "Topic :: Security",
    "Topic :: Utilities",
]
readme = {file="README.md", content-type="text/markdown"}

dependencies = [
    "APScheduler",
    "Cerberus",
    "Jinja2",
    "aiofiles",
    "aiohttp-jinja2",
    "aiohttp-swagger3",
    "aiohttp[speedups] < 3.11",
    "cryptography",
    "deepdiff",
    "detect_secrets",
    "frozendict",
    "jq",
    "jsons",
    "parsy",
    "plantuml",
    "posthog",
    "python-arango",
    "python-dateutil",
    "fixdatalink",
    "rich",
    "toolz",
    "transitions",
    "tzlocal",
    "ustache",
    "fixcompliance",
]

[project.optional-dependencies]

extra = [
    "fixdatalink[extra]"
]

test = [
    "black",
    "coverage",
    "flake8",
    "hypothesis",
    "mypy",
    "pep8-naming",
    "pip-tools",
    "pylint",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "fixinventoryclient>=2.0.0",
    "toml",
    "tox",
    "types-aiofiles",
]


[project.scripts]
fixcore = "fixcore.__main__:main"
resotocore = "fixcore.__main__:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[build-system]
requires = ["setuptools>=67.8.0", "wheel>=0.40.0", "build>=0.10.0"]
build-backend = "setuptools.build_meta"

